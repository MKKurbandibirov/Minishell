make --dry-run --always-make --keep-going --print-directory
make: Entering directory `/Users/gtaggana/git/Minihell'
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
 
gcc -Wall -Wextra -g -c source_files/main.c -o object_files/main.o
echo FILE COLLECTED object_files/main.o
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/execute.c -o object_files/execute.o
echo FILE COLLECTED object_files/execute.o
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/find_cmd.c -o object_files/find_cmd.o
echo FILE COLLECTED object_files/find_cmd.o
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/signal.c -o object_files/signal.o
echo FILE COLLECTED object_files/signal.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/prompt.c -o object_files/prompt.o
echo FILE COLLECTED object_files/prompt.o
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
 
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/redirects.c -o object_files/redirects.o
echo FILE COLLECTED object_files/redirects.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/parser/parser.c -o object_files/parser/parser.o
echo FILE COLLECTED object_files/parser/parser.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/parser/prevalidator.c -o object_files/parser/prevalidator.o
echo FILE COLLECTED object_files/parser/prevalidator.o
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/parser/utils.c -o object_files/parser/utils.o
echo FILE COLLECTED object_files/parser/utils.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/parser/prepars_list_func.c -o object_files/parser/prepars_list_func.o
echo FILE COLLECTED object_files/parser/prepars_list_func.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/parser/preparsing.c -o object_files/parser/preparsing.o
echo FILE COLLECTED object_files/parser/preparsing.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/parser/quote.c -o object_files/parser/quote.o
echo FILE COLLECTED object_files/parser/quote.o
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/parser/utils1.c -o object_files/parser/utils1.o
echo FILE COLLECTED object_files/parser/utils1.o
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/parser/slave.c -o object_files/parser/slave.o
echo FILE COLLECTED object_files/parser/slave.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/parser/slaveLST.c -o object_files/parser/slaveLST.o
echo FILE COLLECTED object_files/parser/slaveLST.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/parser/master.c -o object_files/parser/master.o
echo FILE COLLECTED object_files/parser/master.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/parser/get_cmd_plist.c -o object_files/parser/get_cmd_plist.o
 
echo FILE COLLECTED object_files/parser/get_cmd_plist.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/parser/utils2.c -o object_files/parser/utils2.o
echo FILE COLLECTED object_files/parser/utils2.o
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/builtins/cd.c -o object_files/builtins/cd.o
echo FILE COLLECTED object_files/builtins/cd.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/builtins/echo_n.c -o object_files/builtins/echo_n.o
echo FILE COLLECTED object_files/builtins/echo_n.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/builtins/env.c -o object_files/builtins/env.o
echo FILE COLLECTED object_files/builtins/env.o
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/builtins/exit.c -o object_files/builtins/exit.o
echo FILE COLLECTED object_files/builtins/exit.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/builtins/export_utils1.c -o object_files/builtins/export_utils1.o
echo FILE COLLECTED object_files/builtins/export_utils1.o
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/builtins/export_utils2.c -o object_files/builtins/export_utils2.o
echo FILE COLLECTED object_files/builtins/export_utils2.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/builtins/export.c -o object_files/builtins/export.o
echo FILE COLLECTED object_files/builtins/export.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/builtins/pwd.c -o object_files/builtins/pwd.o
echo FILE COLLECTED object_files/builtins/pwd.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/builtins/unset.c -o object_files/builtins/unset.o
echo FILE COLLECTED object_files/builtins/unset.o
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/builtins/cd_utils.c -o object_files/builtins/cd_utils.o
echo FILE COLLECTED object_files/builtins/cd_utils.o
 
if ! [ -d ./object_files ] ; then \
		mkdir object_files ; \
		mkdir object_files/parser ; \
		mkdir object_files/builtins ; \
	fi 
gcc -Wall -Wextra -g -c source_files/builtins/utils.c -o object_files/builtins/utils.o
echo FILE COLLECTED object_files/builtins/utils.o
 
make -C libft/
gcc -Wall -Wextra -g -lreadline -I ./header_files/ ./object_files/*.o ./object_files/builtins/*.o ./object_files/parser/*.o -o minishell
 
make: Leaving directory `/Users/gtaggana/git/Minihell'
 
